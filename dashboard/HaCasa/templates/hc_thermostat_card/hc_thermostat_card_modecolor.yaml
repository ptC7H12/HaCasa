hc_thermostat_card:
    variables:
      show_window_state: false
      window_open_boolean: null
      show_mode_toggle: false
    show_label: true
    show_state: true
    state_display: |
      [[[
        if (states[entity.entity_id].state === "heat") {
          return '<span  style="color:red;font-weight: bold;">' + states[entity.entity_id].state + '</span >' +' - ' 
            + "Currently " 
            + states[entity.entity_id].attributes.current_temperature 
            +'<p style="font-size:10px;display:inline;vertical-align:text-top">°C</p>'          
        } else {
          return states[entity.entity_id].state +' - ' 
            + "Currently " 
            + states[entity.entity_id].attributes.current_temperature 
            +'<p style="font-size:10px;display:inline;vertical-align:text-top">°C</p>' 
        }
      ]]]
    label: |
      [[[
        return states[entity.entity_id].attributes.temperature + '<sup style="font-size: 40px;">°C</sup>'
      ]]]
    show_icon: false
    styles:
      grid:
        - grid-template-areas: |
            'l buttons'
            'n buttons'
            's buttons'
        - grid-template-rows: min-content min-content min-content
      card:
        - padding: 20px
      name:
        - justify-self: start
        - align-self: end
        - font-family: montserrat
        - font-weight: 500
      label:
        - font-size: 4em
        - justify-self: start
        - align-self: start
        - font-weight: 700
        - font-family: montserrat
      state:
        - justify-self: start
        - opacity: 0.8
        - font-size: 12px
        - font-family: montserrat
    custom_fields:
      buttons:
        card:
          type: custom:button-card
          styles:
            grid:
              - grid-template-areas: |
                  'window item_1'
                  'toggle item_2'
              - row-gap: 3rem
            card:
              - padding: 10px
              - background: none
              - box-shadow: none
          custom_fields:
            window:
              card:
                type: custom:button-card
                icon: |
                  [[[
                      if (variables.window_open_boolean === false){
                      return "mdi:window-closed-variant";
                      } else if (variables.window_open_boolean === true){
                        return "mdi:window-open-variant";
                      }
                  ]]]
                styles:
                  icon:
                    - width: 20px
                  card:
                    - box-shadow: none
                    - background: none
                    - padding: 0px 10px 0px 0px
                    - display: |
                        [[[
                          if (variables.show_window_state == true){
                          return "block";
                          } else {
                            return "none";
                          }
                        ]]]
                  img_cell:
                    - width: 40px
                    - height: 40px
                    - background: rgba(var(--contrast-100),0.05)
                    - padding: 5px
                    - border-radius: 50px
                    - align-self: start
            toggle:
              card:
                type: custom:button-card
                icon: mdi:power
                styles:
                  icon:
                    - width: 20px
                  card:
                    - box-shadow: none
                    - background: none
                    - padding: 0px 10px 0px 0px
                    - display: |
                        [[[
                          if (variables.show_mode_toggle == true){
                          return "block";
                          } else {
                            return "none";
                          }
                        ]]]
                  img_cell:
                    - width: 40px
                    - height: 40px
                    - background: rgba(var(--contrast-100),0.05)
                    - padding: 5px
                    - border-radius: 50px
                    - align-self: start
                tap_action:
                  action: call-service
                  service: >
                    [[[ return states[entity.entity_id].state === 'off' ? 'climate.turn_on' : 'climate.turn_off'; ]]]
                  target:
                    entity_id: "[[[ return entity.entity_id ]]]"
            item_1:
              card:
                type: custom:button-card
                icon: mdi:chevron-up
                styles:
                  icon:
                    - width: 40px
                  card:
                    - box-shadow: none
                    - background: none
                  img_cell:
                    - width: 40px
                    - height: 40px
                    - background: rgba(var(--contrast-100),0.05)
                    - padding: 5px
                    - border-radius: 50px
                tap_action:
                  action: call-service
                  service: climate.set_temperature
                  data:
                    temperature: |
                      [[[
                        return states[entity.entity_id].attributes.temperature + 0.5;
                      ]]]
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
            item_2:
              card:
                type: custom:button-card
                icon: mdi:chevron-down
                styles:
                  icon:
                    - width: 40px
                  card:
                    - box-shadow: none
                    - background: none
                  img_cell:
                    - width: 40px
                    - height: 40px
                    - background: rgba(var(--contrast-100),0.05)
                    - padding: 5px
                    - border-radius: 50px
                    - justify-self: end
                tap_action:
                  action: call-service
                  service: climate.set_temperature
                  data:
                    temperature: |
                      [[[
                        return states[entity.entity_id].attributes.temperature - 0.5;
                      ]]]
                  target:
                    entity_id: '[[[ return entity.entity_id ]]]'
